# this file is used to configure the training of the PPO agent
project: Hyperparameter_sweep_ppo
program: scripts/train_test_ppo_da_id_wandb.py
method: random  # random, grid or bayesian
metric:
  goal: maximize # 'maximize' or 'minimize'
  name: milp_eval_total_profit_best_model
run_cap: 10
parameters:
  directory:
    value: 'sweep'
  subdirectory:
    value: 'sweep_milp_lr_schedule_05_10'
  use_wandb:
    value: 0
  seed:
    value: 100
  hour_horizon:
    value: 36
  days_per_episode:
    value: 14
  da_reward_at_dec:
    value: False
  total_episodes:
    distribution: 'int_uniform'
    min: 2000
    max: 3000
  environment:
    parameters:
      battery_capacity:
        value: 20000
      battery_power:
        value: 10000
      battery_price:
        value: 3
      num_actions:
        value: 5
      seed:
        value: 100
      standby_loss:
        value: 1.0 # for MILP comparison
      degradation:
        value: False # for MILP comparison
      calc_eff:
        value: False # for MILP comparison
      resolution:
        value: 'QH'
      train_data_name:
        value: 'DE_DA_QH_ID_train_adjusted_010_090.csv' # no '/' in front of the path
      test_data_name:
        value: 'DE_DA_QH_ID_test_adjusted_010_090.csv'  # no '/' in front of the path
  ppo_kwargs:
    parameters:
      learning_rate:
        distribution: 'log_uniform_values'
        min: 0.0001
        max: 0.001
      gamma:
        distribution: 'uniform'
        min: 0.99
        max: 0.999
      clip_range:
        distribution: 'uniform'
        min: 0.1
        max: 0.3
      n_steps:
        distribution: 'int_uniform'
        min: 128
        max: 2048
      batch_size:
        values: [64, 128, 256]
      gae_lambda:
        distribution: 'uniform'
        min: 0.9
        max: 0.95
      ent_coef:
        distribution: 'log_uniform_values'
        min: 0.0001
        max: 0.01
      vf_coef:
        distribution: 'uniform'
        min: 0.1
        max: 1.0
      max_grad_norm:
        value: 0.5
      device:
        value: 'auto'  # for GPU or CPU usage
  eval_callback:
    value: True
  delta_ep_eval_call:
    value: 80
  ep_per_eval_call:
    value: 40
  ep_eval_policy:
    value: 1000
  max_no_improvement_evals:
    distribution: 'int_uniform'
    min: 6
    max: 15
  verbose_lr_schedule:
    value: 1
  min_lr:
    distribution: 'log_uniform_values'
    min: 0.00000001
    max: 0.000001
  lr_reduce_factor:
    distribution: 'uniform'
    min: 0.1
    max: 0.5